<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 定义命名空间,用于表示不同SQL配置文件的唯一表示 -->
<mapper namespace="cn.txp.mybatis.mapper.NewsNS"> 

	<!-- 
		keyProperty： 表示实体类对应的id字段
		keyColumn：表示数据表中对应的id字段
		useGeneratedKeys：表示进行主键的生成
	 -->
	<insert id="doCreate" parameterType="News" keyProperty="nid" keyColumn="nid" useGeneratedKeys="true">
		INSERT INTO news(title, content) VALUES (#{title}, #{content});
	</insert>
	
	<insert id="doCreateTow" parameterType="News">
		INSERT INTO news(title, content) VALUES (#{title}, #{content});
		<!-- 
			keyProperty： 表示实体类对应的id字段
			keyColumn：表示数据表中对应的id字段
			order：
				AFTER：表示在增加成功之后获取ID
				BEFORE：表示在增加数据前获取id
			resultType：表示返回主键类型
		 -->
		<selectKey keyProperty="nid" keyColumn="nid" order="AFTER" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="doUpdate" parameterType="News">
		UPDATE news SET title=#{title}, content=#{content} WHERE nid=#{nid}
	</update>
	
	<delete id="doRemove" parameterType="java.lang.Long">
		DELETE FROM news WHERE nid=#{nid}
	</delete>
	
	<select id="findById" parameterType="java.lang.Long" resultType="News">
		SELECT nid, title, content FROM news WHERE nid=#{nid}
	</select>
	
	<select id="findAll" resultType="News">
		SELECT nid, title, content FROM news;
	</select>
	
	<select id="findAllSplit" resultType="News">
		SELECT nid, title, content FROM news WHERE ${column} LIKE #{keyWord} LIMIT #{start}, #{lineSize}
	</select>
</mapper>